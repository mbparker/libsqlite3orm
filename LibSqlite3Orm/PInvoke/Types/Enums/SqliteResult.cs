namespace LibSqlite3Orm.PInvoke.Types.Enums;

public enum SqliteResult
{
	// Basic Codes
	OK = 0,
	Error = 1,
	Internal = 2,
	Perm = 3,
	Abort = 4,
	Busy = 5,
	Locked = 6,
	NoMem = 7,
	ReadOnly = 8,
	Interrupt = 9,
	IOError = 10,
	Corrupt = 11,
	NotFound = 12,
	Full = 13,
	CannotOpen = 14,
	LockErr = 15,
	Empty = 16,
	SchemaChngd = 17,
	TooBig = 18,
	Constraint = 19,
	Mismatch = 20,
	Misuse = 21,
	NotImplementedLFS = 22,
	AccessDenied = 23,
	Format = 24,
	Range = 25,
	NonDBFile = 26,
	Notice = 27,
	Warning = 28,
	Row = 100,
	Done = 101,	
	// Extended Codes 
	IOErrorRead = (IOError | (1 << 8)),
	IOErrorShortRead = (IOError | (2 << 8)),
	IOErrorWrite = (IOError | (3 << 8)),
	IOErrorFsync = (IOError | (4 << 8)),
	IOErrorDirFSync = (IOError | (5 << 8)),
	IOErrorTruncate = (IOError | (6 << 8)),
	IOErrorFStat = (IOError | (7 << 8)),
	IOErrorUnlock = (IOError | (8 << 8)),
	IOErrorRdlock = (IOError | (9 << 8)),
	IOErrorDelete = (IOError | (10 << 8)),
	IOErrorBlocked = (IOError | (11 << 8)),
	IOErrorNoMem = (IOError | (12 << 8)),
	IOErrorAccess = (IOError | (13 << 8)),
	IOErrorCheckReservedLock = (IOError | (14 << 8)),
	IOErrorLock = (IOError | (15 << 8)),
	IOErrorClose = (IOError | (16 << 8)),
	IOErrorDirClose = (IOError | (17 << 8)),
	IOErrorSHMOpen = (IOError | (18 << 8)),
	IOErrorSHMSize = (IOError | (19 << 8)),
	IOErrorSHMLock = (IOError | (20 << 8)),
	IOErrorSHMMap = (IOError | (21 << 8)),
	IOErrorSeek = (IOError | (22 << 8)),
	IOErrorDeleteNoEnt = (IOError | (23 << 8)),
	IOErrorMMap = (IOError | (24 << 8)),
	LockedSharedcache = (Locked | (1 << 8)),
	BusyRecovery = (Busy | (1 << 8)),
	CannotOpenNoTempDir = (CannotOpen | (1 << 8)),
	CannotOpenIsDir = (CannotOpen | (2 << 8)),
	CannotOpenFullPath = (CannotOpen | (3 << 8)),
	CorruptVTab = (Corrupt | (1 << 8)),
	ReadonlyRecovery = (ReadOnly | (1 << 8)),
	ReadonlyCannotLock = (ReadOnly | (2 << 8)),
	ReadonlyRollback = (ReadOnly | (3 << 8)),
	AbortRollback = (Abort | (2 << 8)),
	ConstraintCheck = (Constraint | (1 << 8)),
	ConstraintCommitHook = (Constraint | (2 << 8)),
	ConstraintForeignKey = (Constraint | (3 << 8)),
	ConstraintFunction = (Constraint | (4 << 8)),
	ConstraintNotNull = (Constraint | (5 << 8)),
	ConstraintPrimaryKey = (Constraint | (6 << 8)),
	ConstraintTrigger = (Constraint | (7 << 8)),
	ConstraintUnique = (Constraint | (8 << 8)),
	ConstraintVTab = (Constraint | (9 << 8)),
	NoticeRecoverWAL = (Notice | (1 << 8)),
	NoticeRecoverRollback = (Notice | (2 << 8))
}