name: Build, Test, and Publish

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-and-test:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Determine Version with GitVersion
      uses: gittools/actions/gitversion/setup@v4
      with:
        versionSpec: '6.x'
        
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v4

    - name: Print Semver
      run: echo ${{ steps.gitversion.outputs.SemVer }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
      env:
        TMPDIR: ${{ runner.temp }}
        TMP: ${{ runner.temp }}
        TEMP: ${{ runner.temp }}

  publish:
    name: Publish NuGet Package
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0      

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Determine Version with GitVersion
      uses: gittools/actions/gitversion/setup@v4
      with:
        versionSpec: '6.x'
        
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v4

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Pack
      run: dotnet pack LibSqlite3Orm/LibSqlite3Orm.csproj --configuration Release --no-build /p:Version=${{ steps.gitversion.outputs.SemVer }} --output ./nupkg     

    - name: NuGet login (OIDC â†’ temp API key)
      uses: NuGet/login@v1
      id: login
      with:
        user: ${{ secrets.NUGET_USER }}      

    # using the NUGET_API_KEY generated by the previous login step
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./nupkg/*.*pkg --api-key "${{ steps.login.outputs.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        
